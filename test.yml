version: 0.2

proxy:
  logs: yes

env:
  variables:
    NPM_CONFIG_REGISTRY: https://artifactory/api/npm/org.npmjs.registry
    NPM_CONFIG_ALWAYS_AUTH: true
    AWS_STS_REGIONAL_ENDPOINTS: regional
    HTTP_PROXY: http://app-proxy:3128
    HTTPS_PROXY: http://app-proxy:3128    
    NO_PROXY: 169.254.169.254, 169.254.170.2,localhost, 127.0.0.1, 10.0.0.0/8, 192.168.0.0/16, 172.16.0.0/12, 169.254.100.2, .cba, .ecr.ap-southeast-2.amazonaws.com, sts.ap-southeast-2.amazonaws.com, s3.ap-southeast-2.amazonaws.com, s3-ap-southeast-2.amazonaws.com, .ap-southeast-2.eks.amazonaws.com
    REGION: ap-southeast-2

phases:
  install:
    runtime-versions:
      nodejs: 20
    commands:
      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2 &
      - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
      - npm config set email=$(aws secretsmanager get-secret-value --secret-id artifactory/aps-artifactory-npm-auth --query SecretString --output text | jq -r .email)
      - npm config set //artifactory.internal.cba/api/npm/:_auth=$(aws secretsmanager get-secret-value --secret-id artifactory/aps-artifactory-npm-auth --query SecretString --output text | jq -r ._auth)
      - npm config set //artifactory.internal.cba/api/npm/npm/:_auth=$(aws secretsmanager get-secret-value --secret-id artifactory/aps-artifactory-npm-auth --query SecretString --output text | jq -r ._auth)
      - npm config set //artifactory.internal.cba/api/npm/npm/:username=$(aws secretsmanager get-secret-value --secret-id artifactory/aps-artifactory-npm-auth --query SecretString --output text | jq -r .username)
      - npm config set //artifactory.internal.cba/api/npm/npm/:_password=$(aws secretsmanager get-secret-value --secret-id artifactory/aps-artifactory-npm-auth --query SecretString --output text | jq -r .password)
      - npm config list 
      - make ci
      - make deps
      - curl -H "X-JFrog-Art-Api:$(aws secretsmanager get-secret-value --secret-id artifactory/aps-artifactory-npm-auth --query SecretString --output text | jq -r .identity_token)" https://artifactory/artifactory/cloudservices-awsidentity-generic/PwshRuntimeLayer_arm64.zip --output PwshRuntimeLayer_arm64.zip

  pre_build:
    commands:
      - make install
      - ROLE_CREDS=$(aws sts assume-role --role-arn arn:aws:iam::${TARGET_ACCOUNT}:role/${CROSS_ACCT_ROLE} --role-session-name deployer-session-${TARGET_ACCOUNT} --duration-seconds 3600);
        KEY=$(echo ${ROLE_CREDS} | jq ".Credentials.AccessKeyId" --raw-output);
        SECRET=$(echo ${ROLE_CREDS} | jq ".Credentials.SecretAccessKey" --raw-output);
        TOKEN=$(echo ${ROLE_CREDS} | jq ".Credentials.SessionToken" --raw-output);
        export AWS_ACCESS_KEY_ID=${KEY};
        export AWS_SECRET_ACCESS_KEY=${SECRET};
        export AWS_SESSION_TOKEN=${TOKEN};
        export AWS_DEFAULT_REGION=${REGION};

  build:
    commands:
      - make build
      - make test

  post_build:
    commands:
      - make synth
      - make diff
      - make bootstrap
      - make deploy
