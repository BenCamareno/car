    - name: Read environments and accounts from config file
      id: read-config
      run: |
        environments=$(jq -r '.aws_accounts | keys | join(",")' config/trusted-repos.json)
        echo "environments=$environments" >> $GITHUB_ENV

    - name: Set up matrix for environments
      id: set-matrix
      run: |
        matrix="{\"include\":[]}"
        IFS=',' read -ra envs <<< "${{ env.environments }}"
        for env in "${envs[@]}"; do
          accounts=$(jq -r ".aws_accounts[\"$env\"][]" config/trusted-repos.json)
          for account in $accounts; do
            if [ -n "$account" ]; then
              matrix=$(echo $matrix | jq --arg env "$env" --arg account "$account" '.include += [{"environment": $env, "aws_account": $account}]')
            fi
          done
        done
        echo "Matrix: $matrix"
        echo "matrix=$matrix" >> $GITHUB_OUTPUT


{
    "aws_accounts": {
      "preview": [
        "11111111111"
      ],
      "nonprod": [
        "11111111111"
      ],
      "prod": [
        "11111111111"
      ]
    },
    "gh_repos": {
      "preview": [
        "repo:General/aws-jumphosts-cbainet-workloads:environment:preview",
        "repo:General/aws-jumphosts-cbainet-workloads:environment:ARAM-817",
        "repo:General/cba-organisation-stacksets:environment:ARAM-1180",
        "repo:General/cba-organisation-stacksets:environment:main"
      ],
      "nonprod": [
        "repo:General/aws-jumphosts-cbainet-workloads:environment:preview",
        "repo:General/aws-jumphosts-cbainet-workloads:environment:ARAM-817",
        "repo:General/cba-organisation-stacksets:environment:ARAM-1180",
        "repo:General/cba-organisation-stacksets:environment:main"
      ],
      "prod": [
        "repo:General/aws-jumphosts-cbainet-workloads:environment:preview",
        "repo:General/aws-jumphosts-cbainet-workloads:environment:ARAM-817",
        "repo:General/cba-organisation-stacksets:environment:ARAM-1180",
        "repo:General/cba-organisation-stacksets:environment:main"
      ]
    }
  }



    - name: Set AWS Role ARNs
      run: |
        aws_trust_role=$(echo "${{ secrets.AWS_TRUST_ROLE }}" | sed "s/\${aws_account}/${{ matrix.aws_account }}/g")
        aws_deploy_role=$(echo "${{ secrets.AWS_DEPLOY_ROLE }}" | sed "s/\${aws_account}/${{ matrix.aws_account }}/g")
        echo "AWS_TRUST_ROLE=$aws_trust_role" >> $GITHUB_ENV
        echo "AWS_DEPLOY_ROLE=$aws_deploy_role" >> $GITHUB_ENV


arn:aws:iam::${1111111111111}:role/Role
arn:aws:iam::${1111111111111}:role/Role
