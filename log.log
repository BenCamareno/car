./test/group_provisioner_test.py::test_create_groups Failed: [undefined]AssertionError: 'add_entry' does not contain all of (call(connection=<MagicMock spec='Connection' id='4861887168'>, dn='cn=SLG-Workspaces-TESTWS-Admin,OU=test_container,DC=example,DC=com', object_class='group', attributes={'groupType': -2147483644, 'name': 'SLG-Workspaces-TESTWS-Admin', 'sAMAccountName': 'SLG-Workspaces-TESTWS-Admin', 'displayName': 'SLG-Workspaces-TESTWS-Admin', 'description': 'Test group'}, parent_dn=None), call(connection=<MagicMock spec='Connection' id='4861887168'>, dn='cn=SLG-Workspaces-TESTWS-User,OU=test_container,DC=example,DC=com', object_class='group', attributes={'groupType': -2147483644, 'name': 'SLG-Workspaces-TESTWS-User', 'sAMAccountName': 'SLG-Workspaces-TESTWS-User', 'displayName': 'SLG-Workspaces-TESTWS-User', 'description': 'Test group'}, parent_dn=None)) in its call list, found [call(connection=<MagicMock spec='Connection' id='4861887168'>, dn='OU=TESTWS,OU=test_container,DC=example,DC=com', object_class='organizationalUnit', attributes={'description': 'OU created by AWS provisioner. OU creation', 'name': 'OU=TESTWS,OU=test_container,DC=example,DC=com'}), call(connection=<MagicMock spec='Connection' id='4861887168'>, dn='cn=SLG-Workspaces-TESTWS-Admin,OU=TESTWS,OU=test_container,DC=example,DC=com', object_class='group', attributes={'groupType': -2147483644, 'name': 'SLG-Workspaces-TESTWS-Admin', 'sAMAccountName': 'SLG-Workspaces-TESTWS-Admin', 'displayName': 'SLG-Workspaces-TESTWS-Admin', 'description': 'Test group', 'imsADSMgmtProcsGrp': 'IIQ'}, parent_dn=None), call(connection=<MagicMock spec='Connection' id='4861887168'>, dn='cn=SLG-Workspaces-TESTWS-User,OU=TESTWS,OU=test_container,DC=example,DC=com', object_class='group', attributes={'groupType': -2147483644, 'name': 'SLG-Workspaces-TESTWS-User', 'sAMAccountName': 'SLG-Workspaces-TESTWS-User', 'displayName': 'SLG-Workspaces-TESTWS-User', 'description': 'Test group', 'imsADSMgmtProcsGrp': 'IIQ'}, parent_dn=None)] instead
self = <MagicMock name='add_entry' id='4887447360'>
calls = [call(connection=<MagicMock spec='Connection' id='4861887168'>, dn='cn=SLG-Workspaces-TESTWS-Admin,OU=test_container,D...LG-Workspaces-TESTWS-User', 'displayName': 'SLG-Workspaces-TESTWS-User', 'description': 'Test group'}, parent_dn=None)]
any_order = True

    def assert_has_calls(self, calls, any_order=False):
        """assert the mock has been called with the specified calls.
        The `mock_calls` list is checked for the calls.
    
        If `any_order` is False (the default) then the calls must be
        sequential. There can be extra calls before or after the
        specified calls.
    
        If `any_order` is True then the calls can be in any order, but
        they must all appear in `mock_calls`."""
        expected = [self._call_matcher(c) for c in calls]
        cause = next((e for e in expected if isinstance(e, Exception)), None)
        all_calls = _CallList(self._call_matcher(c) for c in self.mock_calls)
        if not any_order:
            if expected not in all_calls:
                if cause is None:
                    problem = 'Calls not found.'
                else:
                    problem = ('Error processing expected calls.\n'
                               'Errors: {}').format(
                                   [e if isinstance(e, Exception) else None
                                    for e in expected])
                raise AssertionError(
                    f'{problem}\n'
                    f'Expected: {_CallList(calls)}'
                    f'{self._calls_repr(prefix="  Actual").rstrip(".")}'
                ) from cause
            return
    
        all_calls = list(all_calls)
    
        not_found = []
        for kall in expected:
            try:
                all_calls.remove(kall)
            except ValueError:
                not_found.append(kall)
        if not_found:
>           raise AssertionError(
                '%r does not contain all of %r in its call list, '
                'found %r instead' % (self._mock_name or 'mock',
                                      tuple(not_found), all_calls)
            ) from cause
E           AssertionError: 'add_entry' does not contain all of (call(connection=<MagicMock spec='Connection' id='4861887168'>, dn='cn=SLG-Workspaces-TESTWS-Admin,OU=test_container,DC=example,DC=com', object_class='group', attributes={'groupType': -2147483644, 'name': 'SLG-Workspaces-TESTWS-Admin', 'sAMAccountName': 'SLG-Workspaces-TESTWS-Admin', 'displayName': 'SLG-Workspaces-TESTWS-Admin', 'description': 'Test group'}, parent_dn=None), call(connection=<MagicMock spec='Connection' id='4861887168'>, dn='cn=SLG-Workspaces-TESTWS-User,OU=test_container,DC=example,DC=com', object_class='group', attributes={'groupType': -2147483644, 'name': 'SLG-Workspaces-TESTWS-User', 'sAMAccountName': 'SLG-Workspaces-TESTWS-User', 'displayName': 'SLG-Workspaces-TESTWS-User', 'description': 'Test group'}, parent_dn=None)) in its call list, found [call(connection=<MagicMock spec='Connection' id='4861887168'>, dn='OU=TESTWS,OU=test_container,DC=example,DC=com', object_class='organizationalUnit', attributes={'description': 'OU created by AWS provisioner. OU creation', 'name': 'OU=TESTWS,OU=test_container,DC=example,DC=com'}), call(connection=<MagicMock spec='Connection' id='4861887168'>, dn='cn=SLG-Workspaces-TESTWS-Admin,OU=TESTWS,OU=test_container,DC=example,DC=com', object_class='group', attributes={'groupType': -2147483644, 'name': 'SLG-Workspaces-TESTWS-Admin', 'sAMAccountName': 'SLG-Workspaces-TESTWS-Admin', 'displayName': 'SLG-Workspaces-TESTWS-Admin', 'description': 'Test group', 'imsADSMgmtProcsGrp': 'IIQ'}, parent_dn=None), call(connection=<MagicMock spec='Connection' id='4861887168'>, dn='cn=SLG-Workspaces-TESTWS-User,OU=TESTWS,OU=test_container,DC=example,DC=com', object_class='group', attributes={'groupType': -2147483644, 'name': 'SLG-Workspaces-TESTWS-User', 'sAMAccountName': 'SLG-Workspaces-TESTWS-User', 'displayName': 'SLG-Workspaces-TESTWS-User', 'description': 'Test group', 'imsADSMgmtProcsGrp': 'IIQ'}, parent_dn=None)] instead

/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/unittest/mock.py:997: AssertionError

During handling of the above exception, another exception occurred:

mock_add_entry = <MagicMock name='add_entry' id='4887447360'>
mock_get_ws_shortname = <MagicMock name='get_ws_shortname' id='4917612896'>
group_request = <ad_provisioner_api.adprovisioner.group_provisioner.GroupRequest object at 0x123015a30>

    @patch("ad_provisioner_api.adprovisioner.utils.get_ws_shortname")
    @patch("ad_provisioner_api.adprovisioner.utils.add_entry")
    def test_create_groups(mock_add_entry, mock_get_ws_shortname, group_request):
        connection = MagicMock(spec=Connection)
        mock_get_ws_shortname.return_value = "TESTWS"
        mock_add_entry.return_value = True
    
        # Test with LOCAL_GROUP type for WORKSPACES
        group_request.create_groups(
            connection,
            workspace_name,
            ou_container_dn,
            group_object_class,
            roles,
            WORKSPACES,
            LOCAL_GROUP,
            attributes,
            sailpoint_enabled=sailpoint_enabled,
            all_groups_dn=all_groups_dn
        )
    
        # Check that the correct flow was followed for WS (LOCAL_GROUP)
        expected_calls_ws_local = [
            call(connection=connection, dn=f"cn=SLG-{WORKSPACES}-TESTWS-{role},{ou_container_dn}", object_class=group_object_class, attributes={
                "groupType": LOCAL_GROUP,
                "name": f"SLG-{WORKSPACES}-TESTWS-{role}",
                "sAMAccountName": f"SLG-{WORKSPACES}-TESTWS-{role}",
                "displayName": f"SLG-{WORKSPACES}-TESTWS-{role}",
                "description": attributes["description"]
            }, parent_dn=None) for role in roles
        ]
>       mock_add_entry.assert_has_calls(expected_calls_ws_local, any_order=True)
E       AssertionError: 'add_entry' does not contain all of (call(connection=<MagicMock spec='Connection' id='4861887168'>, dn='cn=SLG-Workspaces-TESTWS-Admin,OU=test_container,DC=example,DC=com', object_class='group', attributes={'groupType': -2147483644, 'name': 'SLG-Workspaces-TESTWS-Admin', 'sAMAccountName': 'SLG-Workspaces-TESTWS-Admin', 'displayName': 'SLG-Workspaces-TESTWS-Admin', 'description': 'Test group'}, parent_dn=None), call(connection=<MagicMock spec='Connection' id='4861887168'>, dn='cn=SLG-Workspaces-TESTWS-User,OU=test_container,DC=example,DC=com', object_class='group', attributes={'groupType': -2147483644, 'name': 'SLG-Workspaces-TESTWS-User', 'sAMAccountName': 'SLG-Workspaces-TESTWS-User', 'displayName': 'SLG-Workspaces-TESTWS-User', 'description': 'Test group'}, parent_dn=None)) in its call list, found [call(connection=<MagicMock spec='Connection' id='4861887168'>, dn='OU=TESTWS,OU=test_container,DC=example,DC=com', object_class='organizationalUnit', attributes={'description': 'OU created by AWS provisioner. OU creation', 'name': 'OU=TESTWS,OU=test_container,DC=example,DC=com'}), call(connection=<MagicMock spec='Connection' id='4861887168'>, dn='cn=SLG-Workspaces-TESTWS-Admin,OU=TESTWS,OU=test_container,DC=example,DC=com', object_class='group', attributes={'groupType': -2147483644, 'name': 'SLG-Workspaces-TESTWS-Admin', 'sAMAccountName': 'SLG-Workspaces-TESTWS-Admin', 'displayName': 'SLG-Workspaces-TESTWS-Admin', 'description': 'Test group', 'imsADSMgmtProcsGrp': 'IIQ'}, parent_dn=None), call(connection=<MagicMock spec='Connection' id='4861887168'>, dn='cn=SLG-Workspaces-TESTWS-User,OU=TESTWS,OU=test_container,DC=example,DC=com', object_class='group', attributes={'groupType': -2147483644, 'name': 'SLG-Workspaces-TESTWS-User', 'sAMAccountName': 'SLG-Workspaces-TESTWS-User', 'displayName': 'SLG-Workspaces-TESTWS-User', 'description': 'Test group', 'imsADSMgmtProcsGrp': 'IIQ'}, parent_dn=None)] instead

test/group_provisioner_test.py:73: AssertionError
